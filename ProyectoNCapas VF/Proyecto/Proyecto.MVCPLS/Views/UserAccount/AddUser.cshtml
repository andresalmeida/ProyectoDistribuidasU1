@model Entities.UserAccount

@{
    ViewBag.Title = "Agregar Usuario";
}

<div class="container">
    <div class="form-wrapper">
        <h2>Agregar usuario</h2>

        <form id="registrationForm" method="post" action="@Url.Action("AddUser", "UserAccount")">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="UserName">Nombre de Usuario:</label>
                @Html.TextBoxFor(model => model.UserName, new { @id = "UserName", @class = "form-control", placeholder = "Nombre de usuario" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Email">Correo Electrónico:</label>
                @Html.TextBoxFor(model => model.Email, new { @id = "Email", @class = "form-control", placeholder = "Correo electrónico", type = "email" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="PasswordHash">Contraseña:</label>
                @Html.PasswordFor(model => model.PasswordHash, new { @id = "PasswordHash", @class = "form-control", placeholder = "Contraseña" })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Role">Rol:</label>
                @Html.TextBoxFor(model => model.Role, new { @id = "Role", @class = "form-control", placeholder = "Rol del usuario" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label for="Status">Estado:</label>
                @Html.DropDownListFor(
                    model => model.Status,
                    new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Activo", Value = "Active" },
                        new SelectListItem { Text = "Inactivo", Value = "Inactive" }
                    },
                    "Seleccione un estado",
                    new { @id = "Status", @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>

            <div class="form-buttons">
                <button type="submit" class="btn">Crear Usuario</button>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("registrationForm");

        form.addEventListener("submit", function (event) {
            const password = document.getElementById("PasswordHash").value;
            const status = document.getElementById("Status").value;

            //const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!$%*?&])[A-Za-z\d!$%*?&]{10,}$/;

/*            let hasErrors = false;*/

            // Validar contraseña
            //if (!passwordRegex.test(password)) {
            //    alert("La contraseña debe tener al menos 10 caracteres, incluir una mayúscula, una minúscula, un número y un carácter especial.");
            //    hasErrors = true;
            //}

            // Validar estado
            if (status === "") {
                alert("Debe seleccionar un estado.");
                hasErrors = true;
            }

            if (hasErrors) {
                event.preventDefault(); // Evitar envío del formulario
            }
        });
    });
</script>

<style>
    /* Fondo con imagen */
    body {
        font-family: Arial, sans-serif;
        background: url('https://i.pinimg.com/originals/72/dc/33/72dc339da93a143ec1ed0d54143ecfea.jpg') no-repeat center center/cover;
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }


    /* Contenedor principal */
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }

    .form-wrapper {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        width: 100%;
        max-width: 450px;
        animation: fadeIn 1.5s ease-out;
    }

        .form-wrapper h2 {
            font-size: 26px;
            margin-bottom: 20px;
            text-align: center;
            color: #333;
        }

    /* Animación para el contenedor */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }


    /* Estilo de los campos de entrada */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
            font-size: 14px;
            margin-bottom: 5px;
            display: block;
            color: #555;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease-in-out;
        }

            .form-group input:focus,
            .form-group select:focus {
                border-color: #ff6600;
                box-shadow: 0 0 10px rgba(255, 102, 0, 0.5);
                outline: none;
            }

    /* Botón estilizado */
    .btn {
        width: 100%;
        padding: 12px;
        background-color: #ff6600;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .btn:hover {
            background-color: #e65a00;
            box-shadow: 0 10px 20px rgba(255, 102, 0, 0.4);
            transform: translateY(-2px);
        }

    /* Mensajes de error */
    .text-danger {
        color: red;
        font-size: 12px;
    }
</style>
